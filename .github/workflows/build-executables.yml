name: Build and Release Executables

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  set-version:
    runs-on: ubuntu-latest
    outputs:
      clean_version: ${{ steps.strip.outputs.clean }}
    steps:
      - name: Extract clean version
        id: strip
        run: echo "clean=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

  build-windows:
    runs-on: windows-latest
    needs: set-version
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build Windows Executable
        run: dotnet publish -c Release -r win-x64 --self-contained true `
               /p:PublishSingleFile=true /p:IncludeAllContentForSelfExtract=true `
               -o ./X4PlayerShipTradeAnalyzer
        shell: pwsh

      - name: Prepare Windows package
        run: |
          $ver = "${{ needs.set-version.outputs.clean_version }}"
          cp README.md X4PlayerShipTradeAnalyzer
          if (Test-Path ./X4PlayerShipTradeAnalyzer/X4PlayerShipTradeAnalyzer.pdb) {
            rm ./X4PlayerShipTradeAnalyzer/X4PlayerShipTradeAnalyzer.pdb
          }
          7z a -tzip X4PlayerShipTradeAnalyzer_${ver}_win.zip X4PlayerShipTradeAnalyzer
        shell: pwsh

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: win-zip
          path: X4PlayerShipTradeAnalyzer_${{ needs.set-version.outputs.clean_version }}_win.zip

  build-linux:
    runs-on: ubuntu-latest
    needs: set-version
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build Linux Executable
        run: dotnet publish ./X4PlayerShipTradeAnalyzer.csproj -c Release -r linux-x64 --self-contained true /p:PublishSingleFile=true /p:IncludeAllContentForSelfExtract=true -o ./X4PlayerShipTradeAnalyzer

      - name: Make executable
        run: chmod +x ./X4PlayerShipTradeAnalyzer/X4PlayerShipTradeAnalyzer

      - name: Prepare Linux package
        run: |
          ver="${{ needs.set-version.outputs.clean_version }}"
          cp README.md X4PlayerShipTradeAnalyzer
          rm -f ./X4PlayerShipTradeAnalyzer/X4PlayerShipTradeAnalyzer.pdb || true
          tar -czf X4PlayerShipTradeAnalyzer_${ver}_linux.tar.gz X4PlayerShipTradeAnalyzer

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-tar
          path: X4PlayerShipTradeAnalyzer_${{ needs.set-version.outputs.clean_version }}_linux.tar.gz

  release-and-scan:
    runs-on: ubuntu-latest
    needs: [build-windows, build-linux, set-version]
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: win-zip

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-tar

      - name: Attach archives to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            X4PlayerShipTradeAnalyzer_${{ needs.set-version.outputs.clean_version }}_win.zip
            X4PlayerShipTradeAnalyzer_${{ needs.set-version.outputs.clean_version }}_linux.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}

      - name: VirusTotal scan
        uses: crazy-max/ghaction-virustotal@v4
        with:
          update_release_body: true
          request_rate: 4
          vt_api_key: ${{ secrets.VT_API_KEY }}
          github_token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
          files: |
            X4PlayerShipTradeAnalyzer_${{ needs.set-version.outputs.clean_version }}_win.zip
            X4PlayerShipTradeAnalyzer_${{ needs.set-version.outputs.clean_version }}_linux.tar.gz